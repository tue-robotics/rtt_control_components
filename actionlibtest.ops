# remove system libraries if working in tue-dev:
# rm -rf ~/ros/hydro/system/devel/lib/orocos/gnulinux/rtt_control_components/

# rosrun rtt_control_components test_FollowJointTrajectoryAction

# OR
# roslaunch amigo_launch_files grasp_precompute_action.launch
# rosrun tue_manipulation test_grasp_precompute amigo

# OR
# astart
# amiddle
# amigo_console
# amigo.leftArm.send_joint_trajectory('prepare_grasp')


import("rtt_ros")
ros.import("rtt_control_components")

loadComponent("TrajectoryActionlib","ROS::TrajectoryActionlib")
addPeer("Deployer","TrajectoryActionlib")

TrajectoryActionlib.vector_size 		= 8
TrajectoryActionlib.number_of_inports 	= 2
TrajectoryActionlib.inport_sizes 		= ints (7, 1)
TrajectoryActionlib.InterpolatorDt 	= 0.1
TrajectoryActionlib.InterpolatorEps 	= 1.0
TrajectoryActionlib.minPosition		= array (	-1.57,		-1.57,		-1.57,  	0.0, 		-1.83,		-0.95, 		-0.61, 		-4.0	)
TrajectoryActionlib.maxPosition		= array (	0.0,		1.57,		1.57, 		2.23,  		1.83, 		0.95,  		0.61,  		4.0		)
TrajectoryActionlib.maxVelocity		= array (0.4, 0.4, 0.6, 0.8, 0.8, 1.0, 1.0, 10.0)
TrajectoryActionlib.maxAcceleration	= array (0.2, 0.2, 0.3, 0.5, 0.5, 0.5, 0.5, 100.0)

loadService("TrajectoryActionlib","actionlib")

TrajectoryActionlib.actionlib.connect("/joint_trajectory_action_left");

setActivity("TrajectoryActionlib",0.1,LowestPriority,ORO_SCHED_OTHER)

TrajectoryActionlib.configure

TrajectoryActionlib.start


