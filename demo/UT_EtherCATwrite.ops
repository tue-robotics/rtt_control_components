########################################################################
#                                                                      #
# 							TEST						       		   #
#             														   #
#	Example ops file for the use of EtherCATwrite component            #
#                                                                      #
########################################################################

# Note the difference between Eread and Ewrite: 
# EtherCATread  ->  Readinputs, MapInputs2Outputs, Calculate, Writeoutputs
# Therefore the math operations are done on the already mapped outputs
# EtherCATwrite  ->  Readinputs, Calculate,MapInputs2Outputs, Writeoutputs
# Therefore the math operations are done first on the inputs then the mapping is done

#### IMPORT PACKAGE ####
import("rtt_ros")
ros.import("amigo_hardware")

#### DECLARATION OF PARAMETERS ####
var double TS 					= 0.01

#### SIGNAL GENERATOR ###
loadComponent("SG","SIGNALGENERATOR::SignalGenerator")
setActivity("SG",TS,HighestPriority,ORO_SCHED_RT)
SG.configure
SG.start
# Analog
SG.AddAnalogSignal(4, array (1.0, 2.0, 3.0, 4.0), false);
SG.AddAnalogSignal(1, array (5.0), false);
SG.AddAnalogSignal(8, array (1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 8.1), false);
SG.AddAnalogSignal(2, array (1.123+2.123, 1.0), false);
SG.AddAnalogSignal(1, array (3.123), false);
SG.AddAnalogSignal(2, array (4.123+5.123-2.0, 1.0+2.0), false);
SG.AddAnalogSignal(2, array ((6.123+7.123)*0.5, 1.0*-0.5), false);
SG.AddAnalogSignal(1, array (8.123), false);
# Digital
SG.AddDigitalSignal(1, array (1.0), false);
SG.AddDigitalSignal(1, array (0.0), false);
SG.AddDigitalSignal(1, array (1.0), false);
SG.AddDigitalSignal(1, array (0.0), false);
SG.AddDigitalSignal(1, array (1.0), false);

#### ETHERCAT READ ####
loadComponent("EtherCATwrite","ETHERCATWRITE::EtherCATwrite")
setActivity("EtherCATwrite",TS,HighestPriority,ORO_SCHED_RT)
EtherCATwrite.bodypart_names = strings("base","spindle","left_arm","right_arm","head","generic" )
EtherCATwrite.configure
EtherCATwrite.start
# Analog Outs
EtherCATwrite.AddAnalogOuts("base",      array (4.0), array (4.0), array (1.0, 1.0, 1.0, 1.0), array (1.0, 2.0, 3.0, 4.0))
EtherCATwrite.AddAnalogOuts("spindle",   array (1.0), array (1.0), array (1.0), array (1.0))
EtherCATwrite.AddAnalogOuts("left_arm",  array (8.0), array (9.0), array (1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), array (1.0, 2.0, 0.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0))
EtherCATwrite.AddAnalogOuts("right_arm", array (2.0, 1.0, 2.0, 2.0, 1.0), array (3.0, 3.0, 3.0), array (1.0, 1.0, 0.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0), array (1.0, 2.0, 0.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0))
# Digital Outs
EtherCATwrite.AddDigitalOuts("generic",   array (1.0,1.0,1.0,1.0,1.0), array (4.0, 1.0, 1.0), array (1.0, 2.0, 3.0, 0.0, 4.0, 5.0), array (1.0, 1.0, 1.0, 0.0, 1.0, 1.0))

#### MATH ####
# Analog Outs
EtherCATwrite.AddAddition_A("right_arm", 3, array(2.0, -2.0))
EtherCATwrite.AddMultiply_A("right_arm", 4, array(2.0, -2.0))
EtherCATwrite.AddMatrixTransform_A("left_arm", 1, 8, 8)
EtherCATwrite.left_arm1_matrixtransform1 = array( 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform2 = array( 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform3 = array( 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform4 = array( 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform5 = array( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform6 = array( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform7 = array( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-1.0, 0.0)
EtherCATwrite.left_arm1_matrixtransform8 = array( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-1.0)
EtherCATwrite.AddMatrixTransform_A("right_arm", 1, 2, 2)
EtherCATwrite.AddMatrixTransform_A("right_arm", 2, 1, 1)
EtherCATwrite.AddMatrixTransform_A("right_arm", 3, 2, 2)
EtherCATwrite.AddMatrixTransform_A("right_arm", 4, 2, 2)
EtherCATwrite.AddMatrixTransform_A("right_arm", 5, 1, 1)
EtherCATwrite.right_arm1_matrixtransform1 = array( 0.5,-0.5)
EtherCATwrite.right_arm1_matrixtransform2 = array( 0.5, 0.5)
EtherCATwrite.right_arm2_matrixtransform1 = array( 1.0)
EtherCATwrite.right_arm3_matrixtransform1 = array( 0.5,-0.5)
EtherCATwrite.right_arm3_matrixtransform2 = array( 0.5, 0.5)
EtherCATwrite.right_arm4_matrixtransform1 = array( 0.5,-0.5) 
EtherCATwrite.right_arm4_matrixtransform2 = array( 0.5, 0.5)
EtherCATwrite.right_arm5_matrixtransform1 = array( 1.0)

# Digital Outs

#### CONNECT ####
# Analog
connect ("SG.analogOut1","EtherCATwrite.base_Ain1", ConnPolicy() )
connect ("SG.analogOut2","EtherCATwrite.spindle_Ain1", ConnPolicy() )
connect ("SG.analogOut3","EtherCATwrite.left_arm_Ain1", ConnPolicy() )
connect ("SG.analogOut4","EtherCATwrite.right_arm_Ain1", ConnPolicy() )
connect ("SG.analogOut5","EtherCATwrite.right_arm_Ain2", ConnPolicy() )
connect ("SG.analogOut6","EtherCATwrite.right_arm_Ain3", ConnPolicy() )
connect ("SG.analogOut7","EtherCATwrite.right_arm_Ain4", ConnPolicy() )
connect ("SG.analogOut8","EtherCATwrite.right_arm_Ain5", ConnPolicy() )
connect ("SG.digitalOut1","EtherCATwrite.generic_Din1", ConnPolicy() )
connect ("SG.digitalOut2","EtherCATwrite.generic_Din2", ConnPolicy() )
connect ("SG.digitalOut3","EtherCATwrite.generic_Din3", ConnPolicy() )
connect ("SG.digitalOut4","EtherCATwrite.generic_Din4", ConnPolicy() )
connect ("SG.digitalOut5","EtherCATwrite.generic_Din5", ConnPolicy() )


