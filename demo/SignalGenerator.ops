########################################################################
#                                                                      #
# 					Signal Generator Demo 				       		   #
#                                                                      #
########################################################################

#### IMPORT PACKAGE ####
import("rtt_ros")
ros.import("amigo_hardware")

#### DECLARATION OF PARAMETERS ####
var double TS 					= 0.001

#### LOAD COMPONENT TO ENABLE ANALOG INS PERA ###
loadComponent("SG","SIGNALGENERATOR::SignalGenerator")
setActivity("SG",TS,HighestPriority,ORO_SCHED_RT)
SG.configure
SG.start

#### Analog Signals
SG.AddAnalogSignal(1, array (5.0), false);
SG.AddAnalogSignal(3, array (0.0, 0.0, 0.0), false);
SG.AddAnalogSignal(3, array (0.0, 0.0, 0.0), false);
SG.AddAnalogSignal(3, array (0.0, 0.0, 0.0), false);
SG.AddAnalogSignal(3, array (0.0, 0.0, 0.0), false);
SG.AddAnalogSignal(3, array (0.0, 0.0, 0.0), false);
## 1 - Constant ## 2 - Ramp ## 3 - Noise ## 4 - Sine ## 5 - Step ## 6 - Sine + Step 
SG.AddRamp_A(2,  array(1.0, 2.0, 3.0), array(3.0, 6.0, 9.0));
SG.AddNoise_A(3, array(0.0, 0.0, 0.0), array(0.5, 1.0, 2.0));
SG.AddSine_A(4,  array(1.0, 1.0, 1.0), array(1.0, 2.0, 2.0), array(0.0, 0.0, 3.14159/4));
SG.AddStep_A(5,  array(1.0, 2.0, 3.0), array(8.0, 11.0, 14.0));
SG.AddSine_A(6,  array(1.0, 1.0, 1.0), array(1.0, 2.0, 2.0), array(0.0, 0.0, 3.14159/4));
SG.AddStep_A(6,  array(1.0, 2.0, 3.0), array(3.0, 6.0, 9.0));

##### Integer Signals 
SG.AddIntegerSignal(1, array (1000.0), true);
SG.AddIntegerSignal(3, array (2000.0, 2000.0, 2000.0), false);
SG.AddIntegerSignal(3, array (3000.0, 3000.0, 3000.0), false);
SG.AddIntegerSignal(3, array (3000.0, 3000.0, 3000.0), false);
SG.AddIntegerSignal(3, array (3000.0, 3000.0, 3000.0), false);
## 1 - Constant ## 2 - Ramp ## 3 - Sine ## 4 - Step ## 5 - Sine + Step 
SG.AddRamp_I(2,  array(1.0, 2.0, 3.0), array(3.0, 6.0, 9.0));
SG.AddSine_I(3,  array(1.0, 1.0, 1.0), array(1.0, 2.0, 2.0), array(0.0, 0.0, 3.14159/4));
SG.AddStep_I(4,  array(1.0, 2.0, 3.0), array(3.0, 6.0, 9.0));
SG.AddSine_I(5,  array(1.0, 1.0, 1.0), array(1.0, 2.0, 2.0), array(0.0, 0.0, 3.14159/4));
SG.AddStep_I(5,  array(1.0, 2.0, 3.0), array(3.0, 6.0, 9.0));

##### Digital Signals
SG.AddDigitalSignal(1, array (1.0), false);
SG.AddDigitalSignal(2, array (0.0, 0.0), true);
# 1 Constant - # 2 Step
SG.AddStep_D(2, array(1.0, 1.0), array(5.0, 10.0));

#Trace signals
loadComponent("Tracing","Signal::Tracing")
setActivity("Tracing",TS,HighestPriority,ORO_SCHED_RT)
Tracing.vector_sizes = array (1.0, 3.0, 3.0, 3.0, 3.0); 
Tracing.buffersize = 20000
Tracing.filename = "/home/maxbaeten/data/SGdemo.dat"
Tracing.Ts = TS
Tracing.configure

connect ("SG.analogOut1",		"Tracing.in1", ConnPolicy() );
connect ("SG.analogOut2",		"Tracing.in2", ConnPolicy() );
connect ("SG.analogOut3",		"Tracing.in3", ConnPolicy() );
connect ("SG.analogOut4",		"Tracing.in4", ConnPolicy() );
connect ("SG.analogOut5",		"Tracing.in5", ConnPolicy() );

Tracing.start












