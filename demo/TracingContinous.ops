########################################################################
#                                                                      #
# 							TEST						       		   #
#             														   #
#	Example ops file for the use of EtherCATwrite component            #
#                                                                      #
########################################################################

# Note the difference between Eread and Ewrite: 
# EtherCATread  ->  Readinputs, MapInputs2Outputs, Calculate, Writeoutputs
# Therefore the math operations are done on the already mapped outputs
# EtherCATwrite  ->  Readinputs, Calculate,MapInputs2Outputs, Writeoutputs
# Therefore the math operations are done first on the inputs then the mapping is done

#### IMPORT PACKAGE ####
import("rtt_ros")
ros.import("amigo_hardware")

#### DECLARATION OF PARAMETERS ####
var double TS 					= 0.001

#### SIGNAL GENERATOR ###
loadComponent("SG","SIGNALGENERATOR::SignalGenerator")
setActivity("SG",TS,HighestPriority,ORO_SCHED_RT)
SG.configure
SG.start
# Analog
SG.AddAnalogSignal(4, array (1.1, 2.1, 3.1, 4.1), false);
SG.AddAnalogSignal(4, array (1.2, 2.2, 3.2, 4.2), false);
SG.AddAnalogSignal(4, array (1.3, 2.3, 3.3, 4.3), false);
SG.AddRamp_A(3,  array(1.0, 2.0, 3.0, 4.0), array(3.0, 6.0, 9.0, 10.0));
SG.AddDigitalSignal(1, array (0.0), false);
SG.AddDigitalSignal(1, array (1.0), false);

### TRACING COMPONENT ###
loadComponent("Tracing","Signal::TracingContinous")
setActivity("Tracing",TS,HighestPriority,ORO_SCHED_RT)
Tracing.buffersize = 10000
Tracing.sendErrorLog_delay = 1000 
Tracing.filename = "/home/amigo/DATA/testTC.dat";
Tracing.Ts = TS
Tracing.configure
Tracing.start()
Tracing.AddBodypart("left_arm",3,3,4,strings("err","ref","pos"))

#### CONNECT ####
connect ("SG.analogOut1","Tracing.left_arm_err", ConnPolicy() )
connect ("SG.analogOut2","Tracing.left_arm_ref", ConnPolicy() )
connect ("SG.analogOut3","Tracing.left_arm_pos", ConnPolicy() )
connect ("SG.digitalOut1","Tracing.left_arm_error", ConnPolicy() )
connect ("SG.digitalOut2","Tracing.left_arm_error", ConnPolicy() )
